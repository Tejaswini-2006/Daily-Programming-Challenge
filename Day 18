/*Day 18 of 30 

Problem : Count the Number of Divisors of a Number
Given a positive integer N, your task is to find the total number of divisors (factors) of N. A divisor of N is any integer that divides N without leaving a remainder.
A divisor of a number is any integer that divides the number evenly (i.e., without a remainder). For example, for N = 12, its divisors are 1, 2, 3, 4, 6, 12, so the total number of divisors is 6.

Input :
A single integer N, where 1≤N≤109
N = 12

Output :
An integer representing the total number of divisors of N.
Output: 6

*/
#include <stdio.h>
#include <math.h>

int main() {
    long long N;
    scanf("%lld", &N);

    int count = 0;
    long long i;

    for (i = 1; i * i <= N; i++) {
        if (N % i == 0) {
            if (i * i == N) 
                count += 1;   // perfect square case
            else 
                count += 2;   // i and N/i
        }
    }

    printf("%d\n", count);
    return 0;
}
OUTPUT
Input: 12
Divisors: 1, 2, 3, 4, 6, 12
Output: 6

Input: 18
Divisors: 1, 2, 3, 6, 9, 18
Output: 6

Input: 29 (prime)
Divisors: 1, 29
Output: 2

Input: 100
Divisors: 1, 2, 4, 5, 10, 20, 25, 50, 100
Output: 9

Input: 1
Divisors: 1
Output: 1

Input: 997 (prime)
Divisors: 1, 997
Output: 2
