/*Day 29 of 30 ðŸ—“

Problem : Fibonacci Sequence using Dynamic Programming
You are given an integer n. Your task is to calculate the n-th Fibonacci number using Dynamic Programming.

Input :
* A single integer n (0 â‰¤ n â‰¤ 1000)
* Input : 5

Output :
Return the n-th Fibonacci number.
Output: 5
*/
#include <stdio.h>

int main() {
    int n;
    printf("Enter n: ");
    scanf("%d", &n);

    // Handle base cases
    if (n == 0) {
        printf("0\n");
        return 0;
    }
    if (n == 1) {
        printf("1\n");
        return 0;
    }

    // Dynamic programming array
    // Since n can be up to 1000, int may overflow â†’ use unsigned long long
    unsigned long long fib[1001];  

    fib[0] = 0;
    fib[1] = 1;

    for (int i = 2; i <= n; i++) {
        fib[i] = fib[i-1] + fib[i-2];
    }

    printf("%llu\n", fib[n]);
    return 0;
}
5
5
(Sequence: 0, 1, 1, 2, 3, 5)
10
55
(Sequence ends at F(10) = 55)
