// Daily Programming Challenge Day 1
//Problem : Sort an Array of 0s, 1s, and 2s
//You are given an array arr consisting only of 0s, 1s, and 2s. The task is to sort the array in increasing order in linear time (i.e., O(n)) without using any extra space. This means you need to rearrange the array in-place.

//Input :
//An integer array arr of size n where each element is either 0, 1, or 2.
//Example : arr = [0, 1, 2, 1, 0, 2, 1, 0]

//Output :
//The sorted array, arranged in increasing order of 0s, 1s, and 2s.
//Example: [0, 0, 0, 1, 1, 1, 2, 2]


#include <stdio.h>

void sort012(int arr[], int n) {
    int low = 0, mid = 0, high = n - 1;
    int temp;

    while (mid <= high) {
        if (arr[mid] == 0) {
            temp = arr[low];
            arr[low] = arr[mid];
            arr[mid] = temp;
            low++;
            mid++;
        }
        else if (arr[mid] == 1) {
            mid++;
        }
        else { // arr[mid] == 2
            temp = arr[mid];
            arr[mid] = arr[high];
            arr[high] = temp;
            high--;
        }
    }
}

int main() {
    int n;

    printf("Enter number of elements: ");
    scanf("%d", &n);

    int arr[n];
    printf("Enter %d elements (only 0, 1, or 2):\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    sort012(arr, n);

    printf("Sorted array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}

//Output
Enter number of elements: 8
Enter 8 elements (only 0, 1, or 2):
0 1 2 1 0 2 1 0 
Sorted array: 0 0 0 1 1 1 2 2 
